/// <reference types="node" />
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.21.12
 * source: user.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export declare namespace sample {
    export class Message extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            topic?: string;
            key?: Uint8Array;
            value?: Uint8Array;
        });
        get topic(): string;
        set topic(value: string);
        get key(): Uint8Array;
        set key(value: Uint8Array);
        get value(): Uint8Array;
        set value(value: Uint8Array);
        static fromObject(data: {
            topic?: string;
            key?: Uint8Array;
            value?: Uint8Array;
        }): Message;
        toObject(): {
            topic?: string | undefined;
            key?: Uint8Array | undefined;
            value?: Uint8Array | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Message;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Message;
    }
    export class MessageResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            success?: boolean;
            message?: string;
        });
        get success(): boolean;
        set success(value: boolean);
        get message(): string;
        set message(value: string);
        static fromObject(data: {
            success?: boolean;
            message?: string;
        }): MessageResponse;
        toObject(): {
            success?: boolean | undefined;
            message?: string | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MessageResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): MessageResponse;
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    export abstract class UnimplementedKafkaProducerService {
        static definition: {
            produceMessage: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: Message) => Buffer;
                requestDeserialize: (bytes: Buffer) => Message;
                responseSerialize: (message: MessageResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => MessageResponse;
            };
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract produceMessage(call: grpc_1.ServerUnaryCall<Message, MessageResponse>, callback: grpc_1.sendUnaryData<MessageResponse>): void;
    }
    const KafkaProducerClient_base: grpc_1.ServiceClientConstructor;
    export class KafkaProducerClient extends KafkaProducerClient_base {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>);
        produceMessage: GrpcUnaryServiceInterface<Message, MessageResponse>;
    }
    export {};
}
